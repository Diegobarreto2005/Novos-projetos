# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TfimxxVHh14b29HMuoCJ7MgksQ03Zc6g
"""

class Livro:
    def __init__(self, titulo, autor, genero, quantidade): #Definir a classe Livro
        self.titulo = titulo # Cada livro terá atributos: título, autor, gênero e quantidade disponível.
        self.autor = autor
        self.genero = genero
        self.quantidade = quantidade

lista_de_livros = [] #criar uma lista vazia para poder cadastrar eles depois manualmente

# funcao para cadastrar um livro e suas informaçoes
def cadastrar_livro(titulo, autor, genero, quantidade):
    novo_livro = Livro(titulo, autor, genero, quantidade)
    lista_de_livros.append(novo_livro)
    print(f'O livro "{titulo}" foi cadastrado com sucesso!')

# funcao criada para listar todos os livros
def listar_livros():
    if not lista_de_livros:
        print('Não há livros cadastrados ainda.')
    else:
        print('Lista de livros cadastrados:')
        for livro in lista_de_livros:
            print(f'Título: {livro.titulo}, Autor: {livro.autor}, Gênero: {livro.genero}, Quantidade disponível: {livro.quantidade}')

#funcao criada para buscar um livro por titulo
def buscar_livro_por_titulo(titulo):
    for livro in lista_de_livros:
        if livro.titulo.lower() == titulo.lower():
            return livro
    return None

import matplotlib.pyplot as plt #importando a biblioteca Matplotlib

def gerar_grafico_por_genero(): #funcao criada para gerar grafico de quantidade de livros por genero

    generos = {}
    for livro in lista_de_livros:
        if livro.genero in generos:
            generos[livro.genero] += livro.quantidade
        else:
            generos[livro.genero] = livro.quantidade

    if not generos:
        print('Nenhum livro cadastrado para gerar o gráfico.')
        return
#configurando como vai ser o grafico para ser exibido quando for pedido
    plt.figure(figsize=(10, 6))
    plt.bar(generos.keys(), generos.values(), color='skyblue', edgecolor='black')
    plt.xlabel('Gênero')
    plt.ylabel('Quantidade de Livros Disponíveis')
    plt.title('Quantidade de Livros por Gênero na Biblioteca')
    plt.xticks(rotation=45, ha='right')
    plt.tight_layout()
    plt.show()

# menu de interacao do usuario, como cadastrar, listar...
print('=== Sistema de Gerenciamento de Livros ===')
print('Bem-vindo! A biblioteca está vazia. Use as opções abaixo para gerenciar os livros.')
while True:
    print('\nOpções:')
    print('1 - Cadastrar Livro')
    print('')
    print('2 - Listar Livros')
    print('')
    print('3 - Buscar Livro por Título')
    print('')
    print('4 - Gerar Gráfico por Gênero')
    print('')
    print('5 - Sair')
    print('')

    opcao = input('Escolha uma opção: ')
    print()  # <-- Espaço após a escolha para separar a próxima interação

    if opcao == '1':
        titulo = input('Digite o título: ')
        autor = input('Digite o autor: ')
        genero = input('Digite o gênero: ')
        try:
            quantidade = int(input('Digite a quantidade disponível: '))
            print()  # Espaço antes da mensagem de sucesso
            cadastrar_livro(titulo, autor, genero, quantidade)
        except ValueError:
            print('\nQuantidade deve ser um número inteiro!')

    elif opcao == '2':
        print()
        listar_livros()

    elif opcao == '3':
        print()
        titulo_busca = input('Digite o título para buscar: ')
        livro = buscar_livro_por_titulo(titulo_busca)
        print()
        if livro:
            print(f'Livro encontrado: {livro.titulo} por {livro.autor} ({livro.genero}) - Disponível: {livro.quantidade}')
        else:
            print('Livro não encontrado.')

    elif opcao == '4':
        print()
        gerar_grafico_por_genero()

    elif opcao == '5':
        print('\nSaindo do sistema. Obrigado!\n')
        break

    else:
        print('\nOpção inválida! Tente novamente.\n')